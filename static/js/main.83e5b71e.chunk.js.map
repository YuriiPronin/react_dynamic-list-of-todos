{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectTodo","selectedTodoId","className","map","todo","id","title","completed","type","onClick","TodoFilter","value","response","setValue","setResponse","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","userId","selectedTodo","useState","user","setUser","todoCard","setTodoCard","relevantTodo","find","useEffect","getUser","href","email","name","App","setTodos","loading","setLoading","todoId","setTodoId","filter","setFilter","responseFilter","setResponseFilter","visibleTodos","todoItem","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.83e5b71e.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodoId: number;\n  selectTodo: (value: number) => number | void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectTodo,\n  selectedTodoId,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => {\n          const { id, title, completed } = todo;\n\n          return (\n            <tr key={id} data-cy=\"todo\">\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={completed ? 'has-text-success' : 'has-text-danger'}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    return selectedTodoId !== id\n                      ? selectTodo(id)\n                      : selectTodo(0);\n                  }}\n                >\n                  <span className=\"icon\">\n                    {selectedTodoId === id ? (\n                      <i className=\"far fa-eye-slash\" />\n                    ) : (\n                      <i className=\"far fa-eye\" />\n                    )}\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React, { ChangeEvent } from 'react';\n\ntype Props = {\n  value: string,\n  response: string\n  setValue: (value: string) => string | void,\n  setResponse: (value: string) => string | void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  value,\n  response,\n  setValue,\n  setResponse,\n}) => {\n  const handleNewValue = (event: ChangeEvent<HTMLSelectElement>) => {\n    setValue(event.target.value);\n  };\n\n  const handleNewResponse = (event: ChangeEvent<HTMLInputElement>) => {\n    setResponse(event.target.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={value}\n            onChange={handleNewValue}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={response}\n          onChange={handleNewResponse}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {\n            response && (\n              /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => setResponse('')}\n              />\n            )\n          }\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  userId: number;\n  selectedTodoId: Todo[];\n  selectedTodo: (value: number) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  userId,\n  selectedTodoId,\n  selectedTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [todoCard, setTodoCard] = useState(false);\n\n  const relevantTodo = selectedTodoId.find(todo => todo.id === userId);\n\n  useEffect(() => {\n    if (relevantTodo) {\n      getUser(relevantTodo.userId)\n        .then((response) => setUser(response));\n    }\n  }, []);\n\n  if (todoCard) {\n    return null;\n  }\n\n  const handleReset = (): void => {\n    setTodoCard(false);\n    selectedTodo(0);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${userId}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleReset}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {relevantTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                relevantTodo?.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>\n              }\n\n              {' by '}\n\n              <a href={`mailto: ${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [todoId, setTodoId] = useState(0);\n  const [filter, setFilter] = useState('all');\n  const [responseFilter, setResponseFilter] = useState('');\n\n  useEffect(() => {\n    getTodos()\n      .then((response) => {\n        setTodos(response);\n        setLoading(false);\n      });\n  }, []);\n\n  const filteredTodos = todos.filter(todoItem => {\n    if (filter === 'completed') {\n      return todoItem.completed;\n    }\n\n    if (filter === 'active') {\n      return !todoItem.completed;\n    }\n\n    return true;\n  });\n\n  const visibleTodos = filteredTodos.filter(todoItem => {\n    return todoItem.title.toLowerCase().includes(responseFilter.toLowerCase());\n  });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                value={filter}\n                response={responseFilter}\n                setValue={setFilter}\n                setResponse={setResponseFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {\n                loading ? (\n                  <Loader />\n                ) : (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodoId={todoId}\n                    selectTodo={(todo) => setTodoId(todo)}\n                  />\n                )\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n      {todoId && (\n        <TodoModal\n          userId={todoId}\n          selectedTodoId={visibleTodos}\n          selectedTodo={(todo) => setTodoId(todo)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}